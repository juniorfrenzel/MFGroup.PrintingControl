// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.17929
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace MFGroup.PrintingControl.Test.Web.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class Feature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "CadastrarMaterial.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("pt-BR"), "", "CadastrarMaterial\r\nAfim de garantir o funcionamento correto da tela de cadastro d" +
                    "e material devemos realizar as seguintes validações.", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((TechTalk.SpecFlow.FeatureContext.Current != null) 
                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != "")))
            {
                MFGroup.PrintingControl.Test.Web.Features.Feature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Ao tentar cadastrar um material com os campos em branco")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "")]
        public virtual void AoTentarCadastrarUmMaterialComOsCamposEmBranco()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Ao tentar cadastrar um material com os campos em branco", ((string[])(null)));
#line 5
this.ScenarioSetup(scenarioInfo);
#line 6
 testRunner.Given("que eu navegue até a pagina de Login", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 7
 testRunner.And("preencha os campos de loing com dados validos", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 8
 testRunner.And("clique no botao Login", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 9
 testRunner.Given("que eu clique no menu Cadastrar Material", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "id",
                        "value"});
            table1.AddRow(new string[] {
                        "Descricao",
                        ""});
            table1.AddRow(new string[] {
                        "Marca",
                        ""});
            table1.AddRow(new string[] {
                        "Quantidade",
                        ""});
            table1.AddRow(new string[] {
                        "Gramatura",
                        ""});
            table1.AddRow(new string[] {
                        "Tamanho",
                        ""});
            table1.AddRow(new string[] {
                        "Valor",
                        ""});
#line 10
 testRunner.And("informe os campos", ((string)(null)), table1, "E ");
#line 18
 testRunner.When("clico no botao Salvar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "id",
                        "value"});
            table2.AddRow(new string[] {
                        "Descricao",
                        "Descrição não informada!"});
            table2.AddRow(new string[] {
                        "Marca",
                        "Marca não informada!"});
#line 19
 testRunner.Then("as seguintes mensagens de erro devem ser exibidas", ((string)(null)), table2, "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Ao tentar cadastrar um material com o valores negativos de quantidade e valor")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "")]
        public virtual void AoTentarCadastrarUmMaterialComOValoresNegativosDeQuantidadeEValor()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Ao tentar cadastrar um material com o valores negativos de quantidade e valor", ((string[])(null)));
#line 24
this.ScenarioSetup(scenarioInfo);
#line 25
 testRunner.Given("que eu navegue até a pagina de Login", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 26
 testRunner.And("preencha os campos de loing com dados validos", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 27
 testRunner.And("clique no botao Login", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 28
 testRunner.Given("que eu clique no menu Cadastrar Material", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "id",
                        "value"});
            table3.AddRow(new string[] {
                        "Descricao",
                        "Material 1"});
            table3.AddRow(new string[] {
                        "Quantidade",
                        "-1"});
            table3.AddRow(new string[] {
                        "Valor",
                        "-1"});
#line 29
 testRunner.And("informe os campos", ((string)(null)), table3, "E ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "id",
                        "value"});
            table4.AddRow(new string[] {
                        "Marca",
                        "MarcaA"});
#line 34
 testRunner.And("selecione a marca", ((string)(null)), table4, "E ");
#line 37
 testRunner.When("clico no botao Salvar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "id",
                        "value"});
            table5.AddRow(new string[] {
                        "Quantidade",
                        "Não é permitido cadastrar material com quantidade negativa!"});
            table5.AddRow(new string[] {
                        "Valor",
                        "Não é permitido cadastrar material com valor negativo!"});
#line 38
 testRunner.Then("as seguintes mensagens de erro devem ser exibidas", ((string)(null)), table5, "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
